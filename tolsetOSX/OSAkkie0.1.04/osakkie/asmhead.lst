     1 00000000                                 ; haribote-os boot asm
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 [INSTRSET "i486p"]
     5 00000000                                 
     6 00000000                                 ; 絶対に同じ数値を指定しない
     7  = 00000117                              VBEMODE1	EQU		0x117			; 第1候補 XGA16bitカラー
     8  = 00000105                              VBEMODE2	EQU		0x105			; 第2候補 XGA 8bitカラー
     9 00000000                                 
    10  = 00280000                              BOTPAK	EQU		0x00280000		; bootpackのロード先
    11  = 00100000                              DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
    12  = 00008000                              DSKCAC0	EQU		0x00008000		; ディスクキャッシュの場所（リアルモード）
    13 00000000                                 
    14 00000000                                 ; BOOT_INFO関係
    15  = 00000FF0                              CYLS	EQU		0x0ff0			; ブートセクタが設定する
    16  = 00000FF1                              LEDS	EQU		0x0ff1
    17  = 00000FF2                              VMODE	EQU		0x0ff2			; 色数に関する情報。何ビットカラーか？
    18  = 00000FF4                              SCRNX	EQU		0x0ff4			; 解像度のX
    19  = 00000FF6                              SCRNY	EQU		0x0ff6			; 解像度のY
    20  = 00000FF8                              VRAM	EQU		0x0ff8			; グラフィックバッファの開始番地
    21 00000000                                 
    22                                          		ORG		0xc200			; このプログラムがどこに読み込まれるのか
    23 0000C200                                 
    24 0000C200                                 ; 画面設定::VBEがあるか
    25 0000C200 B8 9000                         		MOV		AX,0x9000
    26 0000C203 8E C0                           		MOV		ES,AX
    27 0000C205 BF 0000                         		MOV		DI,0
    28 0000C208 B8 4F00                         		MOV		AX,0x4f00
    29 0000C20B CD 10                           		INT 	0x10
    30 0000C20D 3D 004F                         		CMP		AX,0x004f
    31 0000C210 0F 85 0087                      		JNE		scrn320
    32 0000C214                                 
    33 0000C214                                 ; 画面設定::VBEバージョンチェック
    34 0000C214 26 8B 45 04                     		MOV		AX,[ES:DI+4]
    35 0000C218 3D 0200                         		CMP		AX,0x0200
    36 0000C21B 72 7E                           		JB		scrn320
    37 0000C21D                                 
    38 0000C21D                                 ; 画面設定::VBEMODEで指定したモードの情報を取得
    39 0000C21D B9 0117                         		MOV		CX,VBEMODE1				; 第1候補
    40 0000C220                                 scrn_retry:								; 第2候補はここから
    41 0000C220 B8 4F01                         		MOV		AX,0x4f01
    42 0000C223 CD 10                           		INT		0x10
    43 0000C225 3D 004F                         		CMP		AX,0x004f
    44 0000C228 75 4E                           		JNE		scrn_next				; 次の候補へ
    45 0000C22A                                 
    46 0000C22A                                 ; 画面設定::画面モード情報の確認
    47 0000C22A 26 8B 05                        		MOV		AX,[ES:DI+0x00]			; 8bit, 16bit 共通チェック項目
    48 0000C22D 25 0080                         		AND		AX,0x0080
    49 0000C230 74 46                           		JZ		scrn_next
    50 0000C232 89 C8                           		MOV		AX,CX
    51 0000C234 25 0010                         		AND		AX,0x0010				; 8ビットカラーか16ビットカラーか調べる
    52 0000C237 3D 0010                         		CMP		AX,0x0010
    53 0000C23A 74 4D                           		JE		scrn_16bit				; 16ビットの場合はジャンプ
    54 0000C23C B2 08                           		MOV		DL,8					;  8ビットの画面モード確認
    55 0000C23E 26 80 7D 19 08                  		CMP		BYTE [ES:DI+0x19],8
    56 0000C243 75 33                           		JNE		scrn_next
    57 0000C245 26 80 7D 1B 04                  		CMP		BYTE [ES:DI+0x1b],4
    58 0000C24A 75 2C                           		JNE		scrn_next
    59 0000C24C                                 
    60 0000C24C                                 ; 画面設定::モード切替
    61 0000C24C                                 scrn_set:
    62 0000C24C 81 C1 4000                      		ADD		CX,0x4000
    63 0000C250 89 CB                           		MOV		BX,CX					;	MOV		BX,VBEMODE1+0x4000
    64 0000C252 81 E9 4000                      		SUB		CX,0x4000
    65 0000C256 B8 4F02                         		MOV		AX,0x4f02
    66 0000C259 CD 10                           		INT		0x10
    67 0000C25B 88 16 0FF2                      		MOV		BYTE [VMODE],DL			; 画面モードをメモする（C言語が参照する）
    68 0000C25F 26 8B 45 12                     		MOV		AX,[ES:DI+0x12]
    69 0000C263 A3 0FF4                         		MOV		[SCRNX],AX
    70 0000C266 26 8B 45 14                     		MOV		AX,[ES:DI+0x14]
    71 0000C26A A3 0FF6                         		MOV		[SCRNY],AX
    72 0000C26D 66 26 8B 45 28                  		MOV		EAX,[ES:DI+0x28]
    73 0000C272 66 A3 0FF8                      		MOV		[VRAM],EAX
    74 0000C276 EB 43                           		JMP		keystatus
    75 0000C278                                 
    76 0000C278                                 ; 候補切り替え
    77 0000C278                                 scrn_next:
    78 0000C278 81 F9 0117                      		CMP		CX,VBEMODE1				; 2回目へ
    79 0000C27C 74 06                           		JE		scrn_next1to2
    80 0000C27E 81 F9 0105                      		CMP		CX,VBEMODE2				; 2回目もだめなのでscrn320へ
    81 0000C282 74 17                           		JE		scrn320
    82 0000C284                                 scrn_next1to2:
    83 0000C284 B9 0105                         		MOV		CX,VBEMODE2
    84 0000C287 EB 97                           		JMP		scrn_retry
    85 0000C289                                 
    86 0000C289                                 ; 16ビットの画面モード確認
    87 0000C289                                 scrn_16bit:
    88 0000C289 B2 10                           		MOV		DL,16
    89 0000C28B 26 80 7D 19 10                  		CMP		BYTE [ES:DI+0x19],16
    90 0000C290 75 E6                           		JNE		scrn_next
    91 0000C292 26 80 7D 1B 06                  		CMP		BYTE [ES:DI+0x1b],6
    92 0000C297 75 DF                           		JNE		scrn_next
    93 0000C299 EB B1                           		JMP		scrn_set
    94 0000C29B                                 
    95 0000C29B                                 ; 画面設定::VBEMODEで指定したモードが使えなかった
    96 0000C29B                                 scrn320:
    97 0000C29B B0 13                           		MOV		AL,0x13					; VGAグラフィックス、320x200x8bitカラー
    98 0000C29D B4 00                           		MOV		AH,0x00
    99 0000C29F CD 10                           		INT		0x10
   100 0000C2A1 C6 06 0FF2 08                   		MOV		BYTE [VMODE],8			; 画面モードをメモする（C言語が参照する）
   101 0000C2A6 C7 06 0FF4 0140                 		MOV		WORD [SCRNX],320
   102 0000C2AC C7 06 0FF6 00C8                 		MOV		WORD [SCRNY],200
   103 0000C2B2 66 C7 06 0FF8 000A0000          		MOV		DWORD [VRAM],0x000a0000
   104 0000C2BB                                 
   105 0000C2BB                                 ; キーボードのLED状態をBIOSに教えてもらう
   106 0000C2BB                                 keystatus:
   107 0000C2BB B4 02                           		MOV		AH,0x02
   108 0000C2BD CD 16                           		INT		0x16 			; keyboard BIOS
   109 0000C2BF A2 0FF1                         		MOV		[LEDS],AL
   110 0000C2C2                                 
   111 0000C2C2                                 ; PICが一切の割り込みを受け付けないようにする
   112 0000C2C2                                 ;	AT互換機の仕様では、PICの初期化をするなら、
   113 0000C2C2                                 ;	こいつをCLI前にやっておかないと、たまにハングアップする
   114 0000C2C2                                 ;	PICの初期化はあとでやる
   115 0000C2C2                                 
   116 0000C2C2 B0 FF                           		MOV		AL,0xff
   117 0000C2C4 E6 21                           		OUT		0x21,AL
   118 0000C2C6 90                              		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
   119 0000C2C7 E6 A1                           		OUT		0xa1,AL
   120 0000C2C9                                 
   121 0000C2C9 FA                              		CLI						; さらにCPUレベルでも割り込み禁止
   122 0000C2CA                                 
   123 0000C2CA                                 ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
   124 0000C2CA                                 
   125 0000C2CA E8 00B5                         		CALL	waitkbdout
   126 0000C2CD B0 D1                           		MOV		AL,0xd1
   127 0000C2CF E6 64                           		OUT		0x64,AL
   128 0000C2D1 E8 00AE                         		CALL	waitkbdout
   129 0000C2D4 B0 DF                           		MOV		AL,0xdf			; enable A20
   130 0000C2D6 E6 60                           		OUT		0x60,AL
   131 0000C2D8 E8 00A7                         		CALL	waitkbdout
   132 0000C2DB                                 
   133 0000C2DB                                 ; プロテクトモード移行
   134 0000C2DB                                 
   135 0000C2DB                                 
   136 0000C2DB 0F 01 16 C3BA                   		LGDT	[GDTR0]			; 暫定GDTを設定
   137 0000C2E0 0F 20 C0                        		MOV		EAX,CR0
   138 0000C2E3 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; bit31を0にする（ページング禁止のため）
   139 0000C2E9 66 83 C8 01                     		OR		EAX,0x00000001	; bit0を1にする（プロテクトモード移行のため）
   140 0000C2ED 0F 22 C0                        		MOV		CR0,EAX
   141 0000C2F0 EB 00                           		JMP		pipelineflash
   142 0000C2F2                                 pipelineflash:
   143 0000C2F2 B8 0008                         		MOV		AX,1*8			;  読み書き可能セグメント32bit
   144 0000C2F5 8E D8                           		MOV		DS,AX
   145 0000C2F7 8E C0                           		MOV		ES,AX
   146 0000C2F9 8E E0                           		MOV		FS,AX
   147 0000C2FB 8E E8                           		MOV		GS,AX
   148 0000C2FD 8E D0                           		MOV		SS,AX
   149 0000C2FF                                 
   150 0000C2FF                                 ; bootpackの転送
   151 0000C2FF                                 
   152 0000C2FF 66 BE 0000C3C0                  		MOV		ESI,bootpack	; 転送元
   153 0000C305 66 BF 00280000                  		MOV		EDI,BOTPAK		; 転送先
   154 0000C30B 66 B9 00020000                  		MOV		ECX,512*1024/4
   155 0000C311 E8 0075                         		CALL	memcpy
   156 0000C314                                 
   157 0000C314                                 ; ついでにディスクデータも本来の位置へ転送
   158 0000C314                                 
   159 0000C314                                 ; まずはブートセクタから
   160 0000C314                                 
   161 0000C314 66 BE 00007C00                  		MOV		ESI,0x7c00		; 転送元
   162 0000C31A 66 BF 00100000                  		MOV		EDI,DSKCAC		; 転送先
   163 0000C320 66 B9 00000080                  		MOV		ECX,512/4
   164 0000C326 E8 0060                         		CALL	memcpy
   165 0000C329                                 
   166 0000C329                                 ; 残り全部
   167 0000C329                                 
   168 0000C329 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; 転送元
   169 0000C32F 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; 転送先
   170 0000C335 66 B9 00000000                  		MOV		ECX,0
   171 0000C33B 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
   172 0000C33F 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   173 0000C346 66 81 E9 00000080               		SUB		ECX,512/4		; IPLの分だけ差し引く
   174 0000C34D E8 0039                         		CALL	memcpy
   175 0000C350                                 
   176 0000C350                                 ; asmheadでしなければいけないことは全部し終わったので、
   177 0000C350                                 ;	あとはbootpackに任せる
   178 0000C350                                 
   179 0000C350                                 ; bootpackの起動
   180 0000C350                                 
   181 0000C350 66 BB 00280000                  		MOV		EBX,BOTPAK
   182 0000C356 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   183 0000C35B 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   184 0000C35F 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   185 0000C363 74 10                           		JZ		skip			; 転送するべきものがない
   186 0000C365 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 転送元
   187 0000C36A 66 01 DE                        		ADD		ESI,EBX
   188 0000C36D 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 転送先
   189 0000C372 E8 0014                         		CALL	memcpy
   190 0000C375                                 skip:
   191 0000C375 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; スタック初期値
   192 0000C37A 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   193 0000C382                                 
   194 0000C382                                 waitkbdout:
   195 0000C382 E4 64                           		IN		 AL,0x64
   196 0000C384 24 02                           		AND		 AL,0x02
   197 0000C386 75 FA                           		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   198 0000C388 C3                              		RET
   199 0000C389                                 
   200 0000C389                                 memcpy:
   201 0000C389 67 66 8B 06                     		MOV		EAX,[ESI]
   202 0000C38D 66 83 C6 04                     		ADD		ESI,4
   203 0000C391 67 66 89 07                     		MOV		[EDI],EAX
   204 0000C395 66 83 C7 04                     		ADD		EDI,4
   205 0000C399 66 83 E9 01                     		SUB		ECX,1
   206 0000C39D 75 EA                           		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   207 0000C39F C3                              		RET
   208 0000C3A0                                 ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   209 0000C3A0                                 
   210 0000C3A0                                 		ALIGNB	16
   211 0000C3A0                                 GDT0:
   212 0000C3A0 00 00 00 00 00 00 00 00         		RESB	8				; ヌルセレクタ
   213 0000C3A8 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   214 0000C3B0 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   215 0000C3B8                                 
   216 0000C3B8 0000                            		DW		0
   217 0000C3BA                                 GDTR0:
   218 0000C3BA 0017                            		DW		8*3-1
   219 0000C3BC 0000C3A0                        		DD		GDT0
   220 0000C3C0                                 
   221 0000C3C0                                 		ALIGNB	16
   222 0000C3C0                                 bootpack:

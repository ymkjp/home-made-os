     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_osak_getbuflen
     7 00000000                                 	EXTERN	__alloca
     8 00000000                                 	EXTERN	_api_openwin
     9 00000000                                 	EXTERN	_api_boxfilwin
    10 00000000                                 	EXTERN	_api_putstrwin
    11 00000000                                 	EXTERN	_tomo_gettick
    12 00000000                                 	EXTERN	_rand_seed
    13 00000000                                 	EXTERN	_rand
    14 00000000                                 	EXTERN	_api_getkey
    15 00000000                                 	EXTERN	_api_closewin
    16 00000000                                 	EXTERN	_api_end
    17 00000000                                 [FILE "luckynum.c"]
    18                                          [SECTION .data]
    19 00000000                                 LC0:
    20 00000000 4C 75 63 6B 79 4E 75 6D 00      	DB	"LuckyNum",0x00
    21 00000009                                 LC1:
    22 00000009 4C 75 63 6B 79 4E 75 6D 62 65   	DB	"LuckyNumber=",0x00
       00000013 72 3D 00 
    23 00000016                                 LC2:
    24 00000016 4C 75 63 6B 79 43 6F 6C 6F 72   	DB	"LuckyColor =",0x00
       00000020 20 3D 00 
    25 00000023                                 LC3:
    26 00000023 47 6F 6F 64 20 4C 75 63 6B 21   	DB	"Good Luck!(^o^)/~",0x00
       0000002D 28 5E 6F 5E 29 2F 7E 00 
    27                                          [SECTION .text]
    28 00000000                                 	GLOBAL	_HariMain
    29 00000000                                 _HariMain:
    30 00000000 55                              	PUSH	EBP
    31 00000001 89 E5                           	MOV	EBP,ESP
    32 00000003 56                              	PUSH	ESI
    33 00000004 53                              	PUSH	EBX
    34 00000005 51                              	PUSH	ECX
    35 00000006 89 E6                           	MOV	ESI,ESP
    36 00000008 E8 [00000000]                   	CALL	_osak_getbuflen
    37 0000000D 69 C0 0000448C                  	IMUL	EAX,EAX,17548
    38 00000013 83 C0 10                        	ADD	EAX,16
    39 00000016 E8 [00000000]                   	CALL	__alloca
    40 0000001B 8D 44 24 0F                     	LEA	EAX,DWORD [15+ESP]
    41 0000001F 68 [00000000]                   	PUSH	LC0
    42 00000024 6A FF                           	PUSH	-1
    43 00000026 83 E0 F0                        	AND	EAX,-16
    44 00000029 6A 52                           	PUSH	82
    45 0000002B 68 000000D6                     	PUSH	214
    46 00000030 50                              	PUSH	EAX
    47 00000031 E8 [00000000]                   	CALL	_api_openwin
    48 00000036 6A 00                           	PUSH	0
    49 00000038 6A 4A                           	PUSH	74
    50 0000003A 89 C3                           	MOV	EBX,EAX
    51 0000003C 68 000000CE                     	PUSH	206
    52 00000041 6A 1A                           	PUSH	26
    53 00000043 6A 06                           	PUSH	6
    54 00000045 50                              	PUSH	EAX
    55 00000046 E8 [00000000]                   	CALL	_api_boxfilwin
    56 0000004B 83 C4 2C                        	ADD	ESP,44
    57 0000004E 68 [00000009]                   	PUSH	LC1
    58 00000053 6A 0C                           	PUSH	12
    59 00000055 6A 06                           	PUSH	6
    60 00000057 6A 1A                           	PUSH	26
    61 00000059 6A 06                           	PUSH	6
    62 0000005B 53                              	PUSH	EBX
    63 0000005C E8 [00000000]                   	CALL	_api_putstrwin
    64 00000061 68 [00000016]                   	PUSH	LC2
    65 00000066 6A 0C                           	PUSH	12
    66 00000068 6A 06                           	PUSH	6
    67 0000006A 6A 2A                           	PUSH	42
    68 0000006C 6A 06                           	PUSH	6
    69 0000006E 53                              	PUSH	EBX
    70 0000006F E8 [00000000]                   	CALL	_api_putstrwin
    71 00000074 83 C4 30                        	ADD	ESP,48
    72 00000077 68 [00000023]                   	PUSH	LC3
    73 0000007C 6A 11                           	PUSH	17
    74 0000007E 6A 03                           	PUSH	3
    75 00000080 6A 3A                           	PUSH	58
    76 00000082 6A 06                           	PUSH	6
    77 00000084 53                              	PUSH	EBX
    78 00000085 E8 [00000000]                   	CALL	_api_putstrwin
    79 0000008A E8 [00000000]                   	CALL	_tomo_gettick
    80 0000008F A3 [00000000]                   	MOV	DWORD [_rand_seed],EAX
    81 00000094 E8 [00000000]                   	CALL	_rand
    82 00000099 BA 0000000A                     	MOV	EDX,10
    83 0000009E 89 D1                           	MOV	ECX,EDX
    84 000000A0 99                              	CDQ
    85 000000A1 F7 F9                           	IDIV	ECX
    86 000000A3 C6 45 F7 00                     	MOV	BYTE [-9+EBP],0
    87 000000A7 8D 42 30                        	LEA	EAX,DWORD [48+EDX]
    88 000000AA 88 45 F6                        	MOV	BYTE [-10+EBP],AL
    89 000000AD 8D 45 F6                        	LEA	EAX,DWORD [-10+EBP]
    90 000000B0 50                              	PUSH	EAX
    91 000000B1 6A 01                           	PUSH	1
    92 000000B3 6A 06                           	PUSH	6
    93 000000B5 6A 1A                           	PUSH	26
    94 000000B7 6A 6E                           	PUSH	110
    95 000000B9 53                              	PUSH	EBX
    96 000000BA E8 [00000000]                   	CALL	_api_putstrwin
    97 000000BF 83 C4 30                        	ADD	ESP,48
    98 000000C2 E8 [00000000]                   	CALL	_rand
    99 000000C7 BA 00000009                     	MOV	EDX,9
   100 000000CC 89 D1                           	MOV	ECX,EDX
   101 000000CE 99                              	CDQ
   102 000000CF F7 F9                           	IDIV	ECX
   103 000000D1 52                              	PUSH	EDX
   104 000000D2 6A 39                           	PUSH	57
   105 000000D4 6A 75                           	PUSH	117
   106 000000D6 6A 2A                           	PUSH	42
   107 000000D8 6A 6E                           	PUSH	110
   108 000000DA 53                              	PUSH	EBX
   109 000000DB E8 [00000000]                   	CALL	_api_boxfilwin
   110 000000E0 83 C4 18                        	ADD	ESP,24
   111 000000E3                                 L2:
   112 000000E3 6A 01                           	PUSH	1
   113 000000E5 E8 [00000000]                   	CALL	_api_getkey
   114 000000EA 5A                              	POP	EDX
   115 000000EB 83 F8 0A                        	CMP	EAX,10
   116 000000EE 75 F3                           	JNE	L2
   117 000000F0 53                              	PUSH	EBX
   118 000000F1 E8 [00000000]                   	CALL	_api_closewin
   119 000000F6 E8 [00000000]                   	CALL	_api_end
   120 000000FB 58                              	POP	EAX
   121 000000FC 89 F4                           	MOV	ESP,ESI
   122 000000FE 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   123 00000101 5B                              	POP	EBX
   124 00000102 5E                              	POP	ESI
   125 00000103 5D                              	POP	EBP
   126 00000104 C3                              	RET
